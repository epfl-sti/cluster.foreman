#!/bin/sh

FOREMAN_ANSWERS=/etc/foreman-installer/scenarios.d/foreman-answers.yaml
FOREMAN_INSTALLER_STAMP=/etc/foreman-installer/last-run-stamp

if tty > /dev/null 2>&1; then
    is_interactive=t
    set -e
else
    is_interactive=
    set -e -x
fi

validate_hostname() {
    case "$(hostname)" in
        *.*) : ;;
        *) cat >&2 <<ERROR
Hostname is not set properly; Puppet CA is unlikely to operate properly.

Consult README.md to find out how to run this Docker image.
ERROR
           exit 2;;
    esac
}

# "Plan" phase: determine configuration
plan_phase() {
    local warned_answers=
    # "Plan" phase: ensure $FOREMAN_ANSWERS is created
    for retry in $(seq 1 60); do
        [ -f "$FOREMAN_ANSWERS" ] && break
        if [ -n "$is_interactive" ]; then
            /scripts/configure.pl
        else
            if [ -z "$warned_answers" ]; then
                echo >&2 "Please run /scripts/configure.pl or provide"
                echo >&2 "$FOREMAN_ANSWERS by any other means."
                echo >&2 "Waiting 2 minutes..."
                warned_answers=t
            fi
            sleep 2
        fi
    done
    if [ ! -f "$FOREMAN_ANSWERS" ]; then
        echo >&2 "No $FOREMAN_ANSWERS - Giving up"
        exit 1
    fi
}

find_target_container() {
    docker ps -q --format '{{.Names}}' --filter status=running | (while read id; do 
	if [ "$(docker inspect --format "{{.Config.Hostname}}" "$id")" = \
             "$DOCKER_TARGET_HOSTNAME" ]; then
            echo "$id"
            break
        fi
    done)
}
this_image="$(find_target_container)"
built_image="$(hostname -f)"
docker_commit_cmd="docker commit $built_image $this_image"

# "Build" phase: run foreman-installer from a properly configured
# Docker (incl. networking)
build_phase() {
    if grep -q server_ssl_cert "$FOREMAN_ANSWERS" && \
       test -f "$FOREMAN_INSTALLER_STAMP" && \
       test "$FOREMAN_ANSWERS" -ot "$FOREMAN_INSTALLER_STAMP"; then return; fi

    foreman-installer --ignore-undocumented
    touch "$FOREMAN_INSTALLER_STAMP"
    [ -f /var/run/docker.sock ] && (set -x; $docker_commit_cmd)
    cat >&2 <<EOF

===== Success! =====

Foreman-in-Docker is up and running, and will remain so for
24 hours. You may now test it out. Should you wish to make changes in
$this_image and render them permanent, be sure to issue

$docker_commit_cmd

and then restart from the newly personalized image, e.g.

docker stop $this_image

docker run --name $built_image \
   --volumes-from $this_image \
   $built_image

EOF

    sleep 86400
    exit 0
}


validate_hostname
plan_phase
/scripts/setup-networking
build_phase
# Only if build_phase is a no-op, do we move on to running supervisord:
exec /usr/bin/supervisord
