#!/usr/bin/perl -w

use strict;

=head1 NAME

dockerer - Build and run the things under docker/

=head1 SYNOPSIS

   dockerer plan
   dockerer build <clustername>
   dockerer run <clustername>

Where C<target> is one of "foreman-base" or "foreman"

=head1 DESCRIPTION

Dockerer runs docker, as the name implies, and also handles the moving
parts that are close by (specifically, networking and persistent data).

=head2 Plan

The "plan" phase consists of downloading as much things as can be. The
result is a Docker image called C<epflsti/foreman-base> that has no
personalization built-in and can be re-used in any number of clusters,
uploaded to a private Docker registry and so on.

=head2 Build

The "build" phase consists of personalizing the "plan" image to suit a
particular cluster and network environment. Personalization
information comes from the previous image if any, and the
C<foreman-installer-answers.yaml> file produced by C<../configure.pl>.
The result is a pair of containers, called respectively
${hostname}-data and ${hostname}, where ${hostname} is the FQDN
of the Foreman container in its own DNS server.

=head2 Run

The "run" phase consists

=cut

use FindBin qw($Bin);
use lib "$Bin/../lib";
use Docopt;
use Pod::Usage;
use Try::Tiny;
use Net::Domain qw(hostfqdn hostdomain);
use autodie qw(:all);

our $opts;
try {
  $opts = docopt();
} catch {
  pod2usage();
};

if ($opts->{plan}) {
  plan();
} elsif ($opts->{build}) {
  build($opts->{'<clustername>'});
} elsif ($opts->{run}) {
  run($opts->{'<clustername>'});
} else {
  pod2usage();
}

sub plan {
  system("cd '$Bin/foreman-base' && docker build -t epflsti/foreman-base .");
}

sub build {
  my ($clustername) = @_;
  plan();
  my $answers_yaml = "$Bin/../foreman-installer-answers.yaml";
  if (! -f $answers_yaml) {
    system("$Bin/../configure.pl");
  }
  my $foreman_hostname = foreman_hostname($clustername);

  my @shellvars = ($Bin, $clustername,
                   $foreman_hostname, foreman_phys_internal_iface(),
                   foreman_ipaddr(), foreman_netmask());
  system(sprintf(<<'DOCKER_PERSONALIZE', @shellvars));
Bin=%s
clustername=%s
foreman_hostname=%s
foreman_phys_internal_iface=%s
foreman_ipaddr=%s
foreman_netmask=%s
docker rm $foreman_hostname-INITIAL >/dev/null 2>&1
set -e -x
(sleep 10; $Bin/foreman-base/pipework/pipework br.privil4 \
           $foreman_hostname-INITIAL $foreman_ipaddr/$foreman_netmask) &
docker run --name=$foreman_hostname-INITIAL -h $foreman_hostname \
    -v "$Bin/..":/cluster.foreman \
    --label=ch.epfl.sti.foreman.built_for_clustername=$clustername \
    -it epflsti/foreman-base \
    bash -c 'cp /cluster.foreman/foreman-installer-answers.yaml /etc/foreman/ && \
             /usr/local/bin/pipework --wait -i eth1 && \
             foreman-installer && \
             /cluster.foreman/docker/scripts/post-build'
containerid=$(docker ps -q -a \
  --filter="label=ch.epfl.sti.foreman.built_for_clustername=$clustername" \
| head -1)
imageid=$(docker commit $containerid)
containerid2=$(docker create --entrypoint=/usr/bin/supervisord $imageid)
docker commit $containerid2 epflsti/foreman-$foreman_hostname
DOCKER_PERSONALIZE
}

sub run {
  my ($clustername) = @_;

  my $foreman_hostname = foreman_hostname($clustername);
  my $foreman_ipaddr = foreman_ipaddr();
  my $foreman_netmask = foreman_netmask();
  my $foreman_phys_internal_iface = foreman_phys_internal_iface();

  # Ensuring that br.privil4 is set up correctly is done by Puppet
  # (in fully operational mode) and by install-provisioning-server.sh
  # (during install)
  system(<<"BRIDGE_AND_DOCKER_RUN");
docker rm $foreman_hostname >/dev/null 2>&1
set -e -x
# TODO: This is just ugly.
(sleep 10; $Bin/foreman-base/pipework/pipework br.privil4 \\
           $foreman_hostname $foreman_ipaddr/$foreman_netmask) & \\
docker run -it --volumes-from=$foreman_hostname-INITIAL \\
    --name=$foreman_hostname -h $foreman_hostname \\
    --dns=127.0.0.1 \\
    -v "$Bin/..":/cluster.foreman \\
    epflsti/foreman-$foreman_hostname
BRIDGE_AND_DOCKER_RUN
}

sub foreman_hostname {
  my ($clustername) = @_;
  if ($clustername =~ m/\./) {
    return $clustername;
  } else {
    return "${clustername}." . hostdomain;
  }
}

# TODO: parse foreman-installer-answers.yaml to figure out these:
sub foreman_ipaddr { "192.168.10.2" }
sub foreman_netmask { "24" }
sub foreman_phys_internal_iface { "eth1" }
